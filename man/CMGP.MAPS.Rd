% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CMGP.MAPS.R
\name{CMGP.MAPS}
\alias{CMGP.MAPS}
\title{Marker Adaptive Prioritization and Stratification}
\usage{
CMGP.MAPS(
  y = NULL,
  CV = NULL,
  geno = NULL,
  map = NULL,
  random = NULL,
  alpha = c(-3, 1),
  ldscore = NULL,
  bin = 1e+06,
  ncpus = 1,
  interval_S = c(1, 15),
  doTrans = FALSE,
  get.KR = FALSE,
  get.P = FALSE,
  EMsteps = 0L,
  EMsteps_fail = 10L,
  EM_alpha = 1,
  max_iter = 50L,
  eps = 0.01,
  verbose = TRUE
)
}
\arguments{
\item{y}{phenotype, n*1 vector, NAs refer to validation}

\item{CV}{covariates, n*q matrix, numeric format for quantitative, character or factor for discrete}

\item{geno}{genotype, m * n matrix/bigmatrix}

\item{map}{marker information, SNP, Chr, Pos}

\item{random}{list, non-additive genetic effects}

\item{alpha}{a numeric value for genotype scaling}

\item{ldscore}{vector, the sum of adjust squared correlation between a marker and markers within the region(in bin size)}

\item{bin}{region size for correlation calculation}

\item{ncpus}{integer value for number of threads used}

\item{interval_S}{interval for search the optimal number of stratification, only used when model was "MAPS"}

\item{doTrans}{logical, FALSE is default, if TRUE, gwas by linear transform will work}

\item{get.KR}{logical, should the Kinship be output}

\item{get.P}{see ?gaston::lmm.aireml}

\item{EMsteps}{see ?gaston::lmm.aireml}

\item{EMsteps_fail}{see ?gaston::lmm.aireml}

\item{EM_alpha}{see ?gaston::lmm.aireml}

\item{max_iter}{see ?gaston::lmm.aireml}

\item{eps}{see ?gaston::lmm.aireml}

\item{verbose}{logical, should the running progress be printed}
}
\value{
list
}
\description{
Marker Adaptive Prioritization and Stratification
}
\examples{
#\donttest{
#revl <- CMGP.MAPS(y = y, CV = CV, geno = geno, map = map, random = random,
#alpha = alpha, ldscore = ldscore, bin = bin,
#ncpus = ncpus, interval_S = interval_S, doTrans = doTrans,
#get.KR = get.KR, get.P = get.P, EM_alpha = EM_alpha,
#EMsteps_fail = EMsteps_fail, EMsteps = EMsteps,
#max_iter = max_iter, eps = eps, verbose = TRUE)
#}
}
